name: CI

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v2

    - name: Download depot tools
      run: curl https://storage.googleapis.com/chrome-infra/depot_tools.zip --output depot_tools.zip

    - name: Extract depot tools
      run: 7z x depot_tools.zip -odepot_tools

    - name: Prepend depot tools to system path
      run: echo "::add-path::${{ github.workspace }}/depot_tools"

    - name: Initialize gclient
      run: |
        set DEPOT_TOOLS_WIN_TOOLCHAIN=0
        gclient
      shell: cmd

    - name: Python there?
      run: where python
      shell: cmd

    - name: Clone PDFium 1
      run: |
        set DEPOT_TOOLS_WIN_TOOLCHAIN=0
        mkdir pdfium_repo
      shell: cmd

    - name: Clone PDFium 2
      run: |
        set DEPOT_TOOLS_WIN_TOOLCHAIN=0
        gclient config --unmanaged https://pdfium.googlesource.com/pdfium.git
      shell: cmd
      working-directory: ./pdfium_repo

    - name: Clone PDFium 3
      run: |
        set DEPOT_TOOLS_WIN_TOOLCHAIN=0
        gclient sync
      shell: cmd
      working-directory: ./pdfium_repo

    - name: Clone PDFium 4
      # Instead of manually installing pywin32 we probably should execute ./build/install-build-deps.sh
      run: |
        set DEPOT_TOOLS_WIN_TOOLCHAIN=0
        cd ./pdfium_repo/pdfium
        call python.bat -m pip install pywin32
      shell: cmd

    - name: Compile PDFium 1
      run: |
        mkdir "./pdfium_repo/pdfium/out"
        copy "args.gn" "./pdfium_repo/pdfium/out/"
      shell: cmd

    - name: Compile PDFium 2
      run: |
        set DEPOT_TOOLS_WIN_TOOLCHAIN=0
        gn gen out
      shell: cmd
      working-directory: ./pdfium_repo/pdfium

    - name: Compile PDFium 3
      run: |
        set DEPOT_TOOLS_WIN_TOOLCHAIN=0
        ninja -C out pdfium
      shell: cmd
      working-directory: ./pdfium_repo/pdfium


    - name: Upload PDFium DLL
      uses: actions/upload-artifact@v2
      with:
        path: ./pdfium_repo/pdfium/out/
